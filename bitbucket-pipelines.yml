image: python:3.7.4-alpine3.10

pipelines:
  branches:
    master:
      - step:
          name: build-compose
          image: composer:1.8
          caches:
            - composer
          services:
             - docker
          script:
            - composer install
          artifacts:
            - vendor/**
       
      - step:
          name: deploy-to-ecr
          services:
            - docker
          caches:
            - pip
          script:
            - pip3 install awscli
            - docker version
            - $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)
            - echo "Tagging image..."
            - IMAGE_TAG="$(echo $BITBUCKET_COMMIT | head -c 8)"
            - docker build -t roma_app -f ./docker-config/app/Dockerfile .
            - echo ${REPOSITORY_URL}
            - docker tag roma_app:latest ${REPOSITORY_URL}:latest 
            - docker tag roma_app:latest ${REPOSITORY_URL}:${IMAGE_TAG} 
            - echo "Pushing image... "
            - docker push ${REPOSITORY_URL}:latest
            - docker push ${REPOSITORY_URL}:${IMAGE_TAG}

      - step:
          name: deploy-ecs
          deployment: production
          services:
            - docker
          caches:
            - pip
          script:
            - pip3 install awscli
            - docker version
            - aws ecs update-service --cluster Cluster_APP_Nfe --service MAGALU-HOTSITE --force-new-deployment

            
definitions:
  services:
    docker:
      memory: 256
  caches:
    composer: vendor/